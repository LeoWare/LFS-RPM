 #!/bin/bash
#################################################
#	Title:	mk-setup-lfs			#
#        Date:	2014-06-27			#
#     Version:	1.0				#
#      Author:	baho-utot@columbus.rr.com	#
#     Options:					#
#################################################
#	Overview
#		install directory /mnt/lfs
#		add lfs user
#		fetch source packages
#		copy build system to /mnt/blfs/usr/src/Octothorpe
#	End
#
set -o errexit		# exit if error...insurance ;)
set -o nounset		# exit if variable not initalized
set +h			# disable hashall
PRGNAME=${0##*/}	# script name minus the path
source config.inc		#	configuration parameters
source function.inc		#	commonn functions
LOGFILE="${PRGNAME}-${LOGFILE}"	#	set log file name
#LOGFILE=/dev/null		#	uncomment to disable log file
ARCH=$(uname -m)	# host architecture
RPMDIR=${PARENT}	# where rpms are stored on the host system
[ ${EUID} -eq 0 ]	|| die "${PRGNAME}: Need to be root user: FAILURE"
[ -z ${BLFS} ]		&& die "${PRGNAME}: BLFS: not set"
[ -z ${LFS} ]		&& die "${PRGNAME}: LFS: not set"
[ -z ${DEVICE} ]	&& die "${PRGNAME}: DEVICE: not set"
[ -z ${PARENT} ]	&& die "${PRGNAME}: PARENT: not set"
> ${LOGFILE}		#	clear/initialize logfile
#
[ -d ${LFS} ] 		&& build "Clean directory: ${LFS}" "rm -rf ${LFS} " "${LOGFILE}"
[ -d ${LFS} ] 		|| build "Creating directory: ${LFS}" "install -vdm 755 ${LFS}" "${LOGFILE}"
[ -d ${LFS}/tools ]	|| build "Creating directory: ${LFS}/tools" "install -vdm 755 ${LFS}/tools" "${LOGFILE}"
[ -h /tools ]		|| build "Symlink: ${LFS}/tools to /tools" "ln -vs ${LFS}/tools /" "${LOGFILE}"
#
#	Create lfs user
#
[ -d /home/lfs ] || {
	msg "Adding lfs user to host: "
	getent group  lfs > /dev/null 2>&1 || build "	Creating lfs group" "groupadd lfs" "${LOGFILE}"
	getent passwd lfs > /dev/null 2>&1 || build "	Creating lfs user" "useradd -c 'LFS user' -g lfs -m -k /dev/null -s /bin/bash lfs" "${LOGFILE}"
	build "	Adding password to lfs" "passwd -l lfs" "${LOGFILE}"
	cat > /home/lfs/.bash_profile <<- "EOF"
		exec env -i HOME=/home/lfs TERM=${TERM} PS1='\u:\w\$ ' /bin/bash
	EOF
	cat > /home/lfs/.bashrc <<- "EOF"
		set +h
		umask 022
		LFS=/mnt/lfs
		LC_ALL=POSIX
		LFS_TGT=$(uname -m)-lfs-linux-gnu
		PATH=/tools/bin:/bin:/usr/bin
		export LFS LC_ALL LFS_TGT PATH
	EOF
	build "	Changing ownership /home/lfs" "chown -R lfs:lfs /home/lfs" "${LOGFILE}"
}
#
#	Fetch source packages
#
#msg "Fetching source packages: "
[ -d SOURCES ] || build "	Create SOURCES directory" "install -vdm 755 SOURCES"
#build "	Retrieving lfs packages" "wget -nc -i wget-lfs -P SOURCES --no-check-certificate" "${LOGFILE}"
#build "	Retrieving rpm packages" "wget -nc -i wget-rpm -P SOURCES --no-check-certificate" "${LOGFILE}"
#pushd SOURCES > /dev/null 2>&1;
#	build "	Checking lfs packages" "md5sum -c ../md5sums-lfs" "${LOGFILE}"
#	build "	Checking rpm packages" "md5sum -c ../md5sums-rpm" "${LOGFILE}"
#popd > /dev/null 2>&1;
#
#	Copy build system to $LFS
#
LIST="BOOK BUILD BUILDROOT LOGS RPMS SOURCES SPECS "				# directories
LIST+="README README.MD "							# docs
LIST+="config config-3.10.10-i686 config-3.13.3-x86_64 locale-gen.conf "	# configuration files
LIST+="macros "									# configuration files
LIST+="md5sums-lfs md5sums-rpm wget-lfs wget-rpm "				# source package data
LIST+="locale-gen.sh version-check "						# lfs scripts
LIST+="config.inc function.inc "						# build system includes
LIST+="mk-setup-lfs mk-lfs mk-tools"							# build system scripts
msg "Install build system: "
build "	Installing directories" "install -vdm 755 ${LFS}/${PARENT}/{BOOK,BUILD,BUILDROOT,LOGS,RPMS,SOURCES,SPECS}" "${LOGFILE}"
build "	Copying files" "cp -var ${LIST} ${LFS}/${PARENT}" "${LOGFILE}"
build "	Setting ownership to lfs user" "chown -R lfs:lfs ${LFS}/" "${LOGFILE}"
exit 0
